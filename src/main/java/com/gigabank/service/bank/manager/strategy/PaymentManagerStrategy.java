package com.gigabank.service.bank.manager.strategy;

import com.gigabank.models.dto.AccountDto;
import com.gigabank.models.dto.request.UserRequestDto;

/**
 * Интерфейс стратегии обработки платежей.
 * <p>
 * Определяет контракт для различных стратегий обработки платежных операций в системе.
 * Каждая реализация интерфейса представляет конкретный способ обработки платежа
 * (банковский перевод, карточный платеж, электронный кошелек и т.д.).
 * </p>
 *
 * <p><b>Основное назначение:</b>
 * <li>Предоставляет единый интерфейс для обработки различных типов платежей</li>
 * <li>Позволяет легко добавлять новые способы обработки платежей</li>
 * <li>Реализует паттерн Стратегия (Strategy) для гибкого управления платежными операциями</li>
 * </p>
 */
public interface PaymentManagerStrategy {
    /**
     * Выполняет обработку платежной операции.
     * <p>
     * Реализация метода должна содержать полную логику обработки конкретного типа платежа,
     * включая валидацию, авторизацию, выполнение операции и отправку уведомлений.
     * </p>
     *
     * @param accountDto банковский счет ({@link AccountDto}), участвующий в операции
     * @param request данные платежного запроса ({@link UserRequestDto})
     */
    void process(AccountDto accountDto, UserRequestDto request);
}
